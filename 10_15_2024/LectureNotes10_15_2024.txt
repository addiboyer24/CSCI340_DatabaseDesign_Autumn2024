Basic SQL

- The name SQL is presently expanded as Structured Query Language.

Why SQL?
- This is because even if the users became dissatisfied with the particular relational DBMS product they were using, converting to another relational 
- DBMS product was not expected to be too expensive and time-consuming because 
both systems followed the same language standards.

- Originally, 
SQL was called SEQUEL (Structured English QUEry Language) and was designed 
and implemented at IBM Research as the interface for an experimental relational 
database system called SYSTEM R.

- Who is Standardizing it?
ANSI (American National Standards Institute) and ISO (International Standards Organization).

- SQL is a comprehensive database language: It has statements for data definitions, 
queries, and updates. Hence, it is both a DDL and a DML (Quiz question)*

- core and extensions - core is supposed to be implemented by all RDBMS vendors.

DDL Commands (Creating Schema's and Tables).

6.1 SQL Data Definition and Data Types

- Back to the practical relational model.
tables (relation), columns (attribute), and rows (tuple).
- used interchangeably.

Data Definition - (CREATE), used to create schemas, tables, types, and domains as well as other things.

6.1.1 Schema and Catalog Concepts in SQL

Schemas:
- group together tables 
and other constructs that belong to the same database application (in some systems, 
a schema is called a database).

- An SQL schema is identified by a schema name and 
includes an authorization identifier to indicate the user or account who owns the 
schema, as well as descriptors for each element in the schema.

- Schema elements
include tables, types, constraints, views, domains, and other constructs (such as 
authorization grants) that describe the schema.

CREATE SCHEMA statement.

Can define all the schema's elements at once, or just the schema name, and authorization identifier and define the elements later.

e.g. 

CREATE Schema UNIVERSITY AUTHORIZATION 'csci340admin';

In general, not all users are authorized to create schemas and schema elements.
Who do you think would do this (think back to the chapter on types of users)?

- Answer: System Administrators, or Database Administrators (quiz question)*

CATALOG - collection of schemas.
there is usually a default schema (dbo).
catalog always contains a special schema INFORMATION_SCHEMA, provides information on all the schemas in the catalog, and all the element descriptors in these schemas.

- Integrity 
constraints such as referential integrity can be defined between relations only if 
they exist in schemas within the same catalog. Schemas within the same catalog can 
also share certain elements, such as type and domain definitions.

6.1.2 The CREATE TABLE Command in SQL

CREATE TABLE used to specify a new relation (table) by giving it a name and specifying it's attributes and initial constraints.

format - ATTRIBUTE NAME ATTRIBUTE DATA TYPE ATTRIBUTE CONSTRAINT(S)

Constraints - key, entity integrity, referential integrity (can be specified within the CREATE TABLE statements after the attributes are declared, or they can be specified later using the ALTER TABLE command.

See Figure 3.7

When creating the table, you can explicitly define the schema the relation (table) will be a part of.

- Explicit:
CREATE TABLE UNIVERSITY.STUDENT...

- Implicit:
CREATE TABLE STUDENT...

These are called base tables (or base relations).
Tables and it's rows are actually created and stored as a file by the DBMS.

Base relation vs. virtual relations (created through the CREATE VIEW statement)
which may or may not correspond to a physical file.

In SQL, the attributes in a base table are considered to be ordered in the sequence in which they are specified in the CREATE TABLE statement.

- rows (tuples) are not considered to be ordered within a table (relation)*

You may have to leave things out:
It is important to note that in Figure 6.1, there are some foreign keys that may cause 
errors because they are specified either via circular references or because they refer 
to a table that has not yet been created. For example, the foreign key Super_ssn in 
the EMPLOYEE table is a circular reference because it refers to the EMPLOYEE table 
itself. The foreign key Dno in the EMPLOYEE table refers to the DEPARTMENT table, 
which has not been created yet. To deal with this type of problem, these constraints 
can be left out of the initial CREATE TABLE statement, and then added later using 
the ALTER TABLE statement (see Chapter 7). We displayed all the foreign keys in 
Figure 6.1 to show the complete COMPANY schema in one place.

6.1.3 Attribute Data Types and Domains in SQL

The basic data types available for attributes include numeric, character string, bit 
string, Boolean, date, and time.

- Numeric data types, integer numbers of various sizes (INTEGER or INT, SMALLINT, BIGINT) & floating point numbers of various precision (FLOAT or REAL, DOUBLE).  Formatted numbers can be declared by using DECIMAL(i,j) where i (the precision), is the total number of digits.  j, the scale is the number of digits after the decimal point. The default for scale is zero, default for precision is implementation defined.

- Character-string data types
- fixed length i.e. CHAR(n) or CHARACTER(n), n is the number of characters.
- varying length i.e. VARCHAR(n) or CHAR VARYING(n) or CHARACTER VARYING(n), n is the maximum number of characters.

Literal string values - single quotes (apostrophes)
Case sensitive - distinction is made between uppercase and lowercase.

- Fixed length, shorter strings are padded with empty string to the right.
- Padded blanks are generally ignored when strings are compared.

Concatenation operator*

- Bit-string - won't go into this.

- Boolean data type, traditionally true/false. but NULL values lead to a three-valued logic to be used, third possible value for a BOOLEAN data type is UNKNOWN.

- Date - YEAR,MONTH,DAY (YYYY-MM-DD). 
- TIME - HOUR,MINUTE,SECOND (HH:MM:SS)
Only Valid dates and times should be allowed*
Operators <, >, etc... (times in the past are less than times in the present, etc..)

Literal values signified with single quoted strings
i.e. today's date
'2024-02-04'

Additional Data Types...
A timestamp - includes DATE and TIME fields, plus a minimum of six positions for decimal fractions.

DATE, TIME, and TIMESTAMP can be considered a special type of String. can be used in string comparison by being cast (or coerced or converted) into equivelent strings.


Domains - 
it's possible to specify the data type of each attribute directly (as in Figure 6.1)
domain can be declared, the domain name can be used with the attribute specification.

*makes it easier to change the data type for a domain that is used by numerous attributes in a schema.

i.e. CREATE DOMAIN SSN_TYPE AS CHAR(9);

Now we can use SSN_TYPE in place of attribute data type.

- A domain can also have an optional default specification via a 
DEFAULT clause, as we discuss later for attributes. Notice that domains may not be 
available in some implementations of SQL.

CREATE TYPE command (which can be used to create user defined types or UDT's)

- it is often used in conjunction with specifying object database features 
that have been incorporated into more recent versions of SQL.

6.2 Specifying Constraints in SQL
Constraints that can be specified upon table creation. these include
- restriction on attribute domains and NULLs
- key
- referential integrity
- constraints on individual tuples within a relation using the CHECK clause.

6.2.1 Specifying Attribute Constraints and Attribute Defaults
Because SQL allows NULLs as attribute values, a constraint NOT NULL may be specified 
if NULL is not permitted for a particular attribute.

- Implicitly specified for the attributes that are part of the primary key for each relation*

- Can be explicitly specified for other attributes that cannot have NULL values.

Default Values (Constraint):
- add "DEFAULT <value>" to an attribute definition.

Default value is included in any new tuple if an explicit value is not provided for that attribute.

- For attributes without default values defined, the default value is NULL for attributes that do not have the NOT NULL constraint (quiz question)*

Check Constraint:
CHECK clause following an attribute or domain definition.

i.e. department numbers are restricted to be between 1 and 20;

Dnumber INT NOT NULL CHECK (Dnumber > 0 AND Dnumber < 21);

The CHECK clause can also be used in conjunction with the CREATE DOMAIN statement i.e.

CREATE DOMAIN D_NUM AS INTEGER
CHECK (D_NUM > 0 AND D_NUM < 21);

6.2.2 Specifying Key and Referential Integrity Constraints

Key Constraints:
PRIMARY KEY - specifies one or more attributes that make up the primary key of a relation.  If it has a single attribute it can follow the attribute directly i.e.

Dnumber INT PRIMARY KEY,

UNIQUE - specifies alternate (unique) keys, also known as what? (candidate keys)*
can be specified directly for a unique key if it is a single attribute

Dname VARCHAR(15) UNIQUE,

Referential Integrity Constraints:
FOREIGN KEY - violated when tuples are inserted and deleted.  When a foreign key or primary key attribute value is updated.

default action is to reject (known as the RESTRICT option)

alternatively database designer can specify the referential triggered action clause to any foreign key constraint*